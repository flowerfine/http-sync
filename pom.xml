<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cn.sliew</groupId>
    <artifactId>http-sync</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>http-stream</module>
        <module>http-workflow</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.test.skip>true</maven.test.skip>
        <maven.deploy.skip>true</maven.deploy.skip>

        <spring.boot.version>2.7.16</spring.boot.version>
        <spring.cloud.version>2021.0.8</spring.cloud.version>
        <quarkus.platform.version>3.2.9.Final</quarkus.platform.version>
        <quarkus-plugin.version>3.2.9.Final</quarkus-plugin.version>
        <kogito.bom.version>2.44.0.Alpha</kogito.bom.version>
        <micrometer.version>1.9.15</micrometer.version>
        <jackson.version>2.13.5</jackson.version>
        <akka.version>2.6.21</akka.version>
        <alpakka.version>6.0.2</alpakka.version>
        <akka.http.version>10.5.2</akka.http.version>
        <scala.version>2.13.0</scala.version>
        <scala.binary.version>2.13</scala.binary.version>
        <jackson.version>2.13.5</jackson.version>
        <knife4j.version>4.1.0</knife4j.version>
        <arrow.version>7.0.0</arrow.version>
        <seatunnel.version>2.3.3</seatunnel.version>
        <milky.version>1.0.10</milky.version>
        <flink.version>1.13.6</flink.version>
        <schedulerx.version>1.11.0</schedulerx.version>
        <temporal.version>1.24.1</temporal.version>
        <serverlessworkflow.version>4.0.5.Final</serverlessworkflow.version>
        <jackson-jq.version>1.0.0-preview.20240207</jackson-jq.version>
        <pf4j.version>3.11.0</pf4j.version>

        <mysql.connector.version>8.0.22</mysql.connector.version>
    </properties>

    <repositories>
        <repository>
            <id>sonatype-nexus</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>kogito-bom</artifactId>
                <version>${kogito.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-bom_${scala.binary.version}</artifactId>
                <version>${akka.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http-bom_${scala.binary.version}</artifactId>
                <version>${akka.http.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-dependencies</artifactId>
                <version>${knife4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-bom</artifactId>
                <version>${micrometer.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>http-stream-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>http-stream-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>http-stream-remote</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>http-stream-akka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>http-stream-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.sliew</groupId>
                <artifactId>milky-common</artifactId>
                <version>${milky.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.5.3.2</version>
            </dependency>

            <dependency>
                <groupId>org.apache.seatunnel</groupId>
                <artifactId>seatunnel-translation-base</artifactId>
                <version>${seatunnel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.seatunnel</groupId>
                <artifactId>connector-fake</artifactId>
                <version>${seatunnel.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-memory-netty</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-vector</artifactId>
                <version>${arrow.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun.schedulerx</groupId>
                <artifactId>schedulerx2-spring-boot-starter</artifactId>
                <version>${schedulerx.version}</version>
            </dependency>

            <dependency>
                <groupId>io.temporal</groupId>
                <artifactId>temporal-sdk</artifactId>
                <version>${temporal.version}</version>
            </dependency>
            <dependency>
                <groupId>io.temporal</groupId>
                <artifactId>temporal-spring-boot-starter</artifactId>
                <version>${temporal.version}</version>
            </dependency>
            <dependency>
                <groupId>io.temporal</groupId>
                <artifactId>springboot-web-ui</artifactId>
                <version>${temporal.version}</version>
            </dependency>

            <dependency>
                <groupId>io.serverlessworkflow</groupId>
                <artifactId>serverlessworkflow-api</artifactId>
                <version>${serverlessworkflow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.serverlessworkflow</groupId>
                <artifactId>serverlessworkflow-validation</artifactId>
                <version>${serverlessworkflow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.serverlessworkflow</groupId>
                <artifactId>serverlessworkflow-spi</artifactId>
                <version>${serverlessworkflow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.serverlessworkflow</groupId>
                <artifactId>serverlessworkflow-util</artifactId>
                <version>${serverlessworkflow.version}</version>
            </dependency>

            <dependency>
                <groupId>net.thisptr</groupId>
                <artifactId>jackson-jq</artifactId>
                <version>${jackson-jq.version}</version>
            </dependency>

            <dependency>
                <groupId>org.pf4j</groupId>
                <artifactId>pf4j</artifactId>
                <version>${pf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>

            <dependency>
                <groupId>io.temporal</groupId>
                <artifactId>temporal-testing</artifactId>
                <version>${temporal.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>